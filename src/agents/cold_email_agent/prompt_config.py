from langchain_openai import ChatOpenAI
import os
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

# Get API key from environment
openai_api_key = os.getenv("OPENAI_API_KEY")
if not openai_api_key:
    raise ValueError("OPENAI_API_KEY not found in environment variables")

hb_cta_agent_template = {
    "lead_researcher": {
        "role": "Lead Researcher",
        "goal": "Get relevant client details for the given offer",
        "backstory": "You are a researcher specialising in researching and profiling leads."
        "You extract relevant information about leads from the given data that will help in generating personalised "
        "email for cold out reach.",
        "allow_delegation": False,
        "llm": ChatOpenAI(model="gpt-3.5-turbo", temperature=0),
    },
    "company_researcher": {
        "role": "Company Researcher",
        "goal": "Get relevant client company information details for the given offer",
        "backstory": "You are a researcher specialising in researching and profiling client companies."
        "You extract relevant information about a client company from the given data that will help "
        "in generating personalised email for cold out reach.",
        "allow_delegation": False,
        "llm": ChatOpenAI(model="gpt-3.5-turbo", temperature=0),
    },
    "hook_body_writer": {
        "role": "Email hook and body Writer",
        "goal": "Write personalised hook and body of a cold email that will be sent to a lead",
        "backstory": "You are an experienced email writer specialising in writing personalised cold emails to leads."
        "You will use the information provided by the  Lead Researcher and the Company Researcher to write two "
        "important parts of a personalised cold email: "
        "1. The Hook: The hook is ideally the first one or two sentences of the email written to get the lead's attention"
        "2. The body: The body describes the product or service offered to the lead.",
        "allow_delegation": False,
        "llm": ChatOpenAI(model="gpt-3.5-turbo", temperature=0.7),
    },
    "cta_writer": {
        "role": "Email Call to Action writer",
        "goal": "Write professional call to action for a personalised cold email that will be sent to a lead",
        "backstory": "You are an experienced email writer specialising in writing personalised cold emails to leads."
        "You will use the information provided by the Email hook and body Writer and the given call-to-action to write "
        "a call to action for the cold email. Here is the call to action that I want: {cta}",
        "allow_delegation": False,
        "llm": ChatOpenAI(model="gpt-3.5-turbo", temperature=0.3),
    },
    "email_compiler": {
        "role": "Email compiler",
        "goal": "Validate and generate the final email",
        "backstory": "You are the lead of the cold email campaign. You will use the information provided by the "
        "Email hook and body Writer and Email Call to Action writer to generate the final email and"
        "validate it to make sure it is professional.",
        "allow_delegation": False,
        "llm": ChatOpenAI(model="gpt-4", temperature=0.5),
    },
    # "email_validator": {
    #     "role": "Email validator",
    #     "goal": "Validate the final email",
    #     "backstory": "You are the manager of the cold email campaign. You will validate the final email"
    #     "generated by the Email compiler to make sure it is professional.",
    #     "allow_delegation": False,
    # },
}

hb_cta_task_template = {
    "lead_profiling_task": {
        "description": "1. Analyze the lead's LinkedIn profile information: {linkedin_profile}"
        "2. Review the offer details: {offer}"
        "3. Generate 2-3 pain points that can be used to write an email hook using the profile and offer details (call these 'lead-pain points')",
        "expected_output": "Point wise lead pain points",
    },
    "company_profiling_task": {
        "description": "1.Understand the information extracted from the lead's company profile here: {company_profile}."
        "2.Understand the offer that I am trying to sell here: {offer}."
        "3.Identify 2-3 pain points of the company that can be solved by the offer. You can assume "
        "general best practices and challenges faced by this business to identify pain points."
        "Let's call them 'company-pain points'",
        "expected_output": "Point wise company pain points",
    },
    "hook_body_writing_task": {
        "description": "1. hook_offer_combination_1: Write a hook for a cold email using the company-pain points. "
        "Add a short paragraph clearly stating the offer and how it helps them."
        " "
        "2. hook_offer_combination_2: Write a hook for a cold email using the lead-pain points. "
        "Add a short paragraph clearly stating the offer and how it helps them."
        " "
        "Make sure the hooks are attention grabing for a human and is less than 20 words. Make sure they are not too generic and hyper personalised."
        "Make sure the offer description (in the second paragraph) is short and to the point and is less than 40 words."
        "Here is the offer: {offer}",
        "expected_output": "2 Professional hooks/openers and respective offers of a personalised cold email",
    },
    "cta_writing_task": {
        "description": "Write a one or two liner call to action for the email. If the {cta} includes a link, "
        "redirect the user to the link. Make sure the cta is less than 25 words.",
        "expected_output": "Professional call to action of a personalised cold email",
    },
    "final_email_task": {
        "description": "Choose one of hook_offer_combination_1 or hook_offer_combination_2 that is more attention grabbing for a human "
        "and combine it with the cta and then the closing signature creating the full email. Do not further modify the hooks or the offer description. "
        "The name of the lead is {lead_name}. The sender of this email is {seller_name}."
        "Make sure the email is less than 80 words.",
        "expected_output": "1. The subject of the email. 2. The email. In this format: Subject: <subject> Email: <email>",
    },
    # "email_validation_task": {
    #     "description": "Validate the final email to make sure it is "
    #     "1. Professional but not too formal. 2. Follows the format of a cold email. "
    #     "3. Is not too generic. 4. Looks like it is written by a human."
    #     "Once validated, return the email in the following format: Subject: <subject> Email: <email>"
    #     "Otherwise delegate the task back to the Email compiler to fix the issues.",
    #     "expected_output": "The final email in the format: Subject: <subject> Email: <email>",
    # }
}

task_agent_mapping = {
    "lead_profiling_task": "lead_researcher",
    "company_profiling_task": "company_researcher",
    "hook_body_writing_task": "hook_body_writer",
    "cta_writing_task": "cta_writer",
    "final_email_task": "email_compiler",
    # "email_validation_task": "email_validator",
}
